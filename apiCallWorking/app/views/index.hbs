{{!--<div style="display:none;" id="data" >{{data}}</div>--}}

{{!--<div class="container-fluid">--}}
{{!--  <div class="row">--}}

{{!--    <div class="col-md-3 col-sm-3 col-xs-3">--}}

{{!--      <div id="ingredientsList">--}}
{{!--        <h5>Enter your ingredients</h5>--}}
{{!--        <input id="search" placeholder="Enter item" onkeyup="newIngredient(event);">--}}
{{!--      </div>--}}

{{!--      <br>--}}
{{!--      <button  type="button" class="btn btn-success btn-xs" onclick="getAllIngredients();">Let's see what we can make!</button>--}}

{{!--    </div>--}}

{{!--    <div class="col-md-9 col-sm-9 col-xs-9">--}}
{{!--        <h2>Main user interface</h2>--}}
{{!--        <div id="output">The API request is:</div>--}}
{{!--        <div id ="outputID">The ID of the thing is: </div>--}}

{{!--        <div id ="recipe">Your recipe: </div>--}}
{{!--    </div>--}}
{{!--  </div>--}}
{{!--</div>--}}

 <img class = "logo" src = "Images/Artboard1.png">
  

  <!--<p>Google Calendar API Quickstart</p>-->
  <div class = "buttons">
     <!--Add buttons to initiate auth sequence and sign out-->
  <input type = "button" id="authorize-button"></button>
  <input type = "button" id="signout-button"></button>
    
  <input type=button id="cont" onClick="location.href = 'form.html'" value='Continue'>
  </div>
   

   <script>
  $(document).ready(function(){
      $("#cont").hide();
      $("#authorize-button").click(function(){
          $("#cont").show();
      });
  });
  </script>
  
  <script type="text/javascript">
    // Client ID and API key from the Developer Console
    var CLIENT_ID = '895501991573-jfffltlers3refnm8klrl9iog9fbskgr.apps.googleusercontent.com';

    // Array of API discovery doc URLs for APIs used by the quickstart
    var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];

    // Authorization scopes required by the API; multiple scopes can be
    // included, separated by spaces.
    var SCOPES = "https://www.googleapis.com/auth/calendar.readonly";

    var authorizeButton = document.getElementById('authorize-button');
    var signoutButton = document.getElementById('signout-button');

    /**
     *  On load, called to load the auth2 library and API client library.
     */
    function handleClientLoad() {
      gapi.load('client:auth2', initClient);
    }

    /**
     *  Initializes the API client library and sets up sign-in state
     *  listeners.
     */
    function initClient() {
      gapi.client.init({
        discoveryDocs: DISCOVERY_DOCS,
        clientId: CLIENT_ID,
        scope: SCOPES
      }).then(function() {
        // Listen for sign-in state changes.
        gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

        // Handle the initial sign-in state.
        updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
        authorizeButton.onclick = handleAuthClick;
        signoutButton.onclick = handleSignoutClick;
      });
    }

    /**
     *  Called when the signed in status changes, to update the UI
     *  appropriately. After a sign-in, the API is called.
     */
    function updateSigninStatus(isSignedIn) {
      if (isSignedIn) {
        authorizeButton.style.display = 'none';
        signoutButton.style.display = 'block';
        //listUpcomingEvents();
      }
      else {
        authorizeButton.style.display = 'block';
        signoutButton.style.display = 'none';
      }
    }

    /**
     *  Sign in the user upon button click.
     */
    function handleAuthClick(event) {
      gapi.auth2.getAuthInstance().signIn();
    }

    /**
     *  Sign out the user upon button click.
     */
    function handleSignoutClick(event) {
      gapi.auth2.getAuthInstance().signOut();
    }

    /**
     * Append a pre element to the body containing the given message
     * as its text node. Used to display the results of the API call.
     *
     * @param {string} message Text to be placed in pre element.
     */
    function appendPre(message) {
      var pre = document.getElementById('content');
      var textContent = document.createTextNode(message + '\n');
      pre.appendChild(textContent);
    }
  </script>

  <script async defer src="https://apis.google.com/js/api.js" onload="this.onload=function(){};handleClientLoad()" onreadystatechange="if (this.readyState === 'complete') this.onload()">
  </script>


</body>










<script>
  var ingredients = document.getElementById("data").innerHTML;
  ingredients = JSON.parse(ingredients);

  $.getScript('/js/awesomplete.js', function()
    {
      var input = document.getElementById("search");
      new Awesomplete(input, {
        list: ingredients
      });
      console.log("Suggestion bar ready");
    });
</script>

<section class="insert">
    <h3>Insert Data</h3>
    <form action="/insert" method="post">
        <div class="input">
            <label for="title">Title</label>
            <input type="text" id="ingredients" name="ingredients">
        </div>
        <button type="submit">INSERT</button>
    </form>
</section>


<section class="get">
    <h3>Get Data</h3>
    <a href="/get-data">LOAD DATA</a>
    <div>
        {{# each items }}
            <article class="item">
                <div>Title: {{ this.title }}</div>
            </article>
        {{/each}}
    </div>
</section>
